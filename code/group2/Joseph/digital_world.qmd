---
title: "Young people - digital world"
author: "Joseph"
editor: visual
# toc: true
# toc-location: left
code-link: true
code-line-numbers: true
code-fold: false
linkcolor: blue
output-file: "Digital World"
---

## Article Source

The figures here are replicated from [Young people - digital world](https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Young_people_-_digital_world).

## Loading Packages

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE, 
                      warning = F,
                      message = F)
```

```{r}
require(conflicted)

require(restatapi)
require(giscoR)

require(data.table)
require(chron)
require(reshape2)

require(kableExtra)
require(tidyverse)
require(tmap)

require(highcharter)
require(plotly)

conflicts_prefer(dplyr::filter)
```

## Figure 7

### Retrieving data

```{r}
id7 <- "isoc_sk_dskl_i21"
date7 <- 2021:2023

eu_cc <- get("cc", envir = .restatapi_env)$EU27_2020
efta_cc <- c("CH", "NO", "IS", "LI")

# Fetch the data from Eurostat
data7 <- get_eurostat_data(
  id7, 
  filters = list(
    ind_type = c("M_Y16_29", "F_Y16_29"),
    indic_is = "I_DSK2_BAB",
    freq = "Annual",
    unit = c("PC_IND")
  ),
  date_filter = date7,
  label = TRUE,
  ignore.case = TRUE,
  exact_match = FALSE,
  perl = TRUE,
  stringsAsFactors = FALSE,
  force_local_filter = TRUE,
  keep_flags = T
)

# Filter the data
data7 <- data7 |> 
  filter(unit == "Percentage of individuals") |>
  filter(time == 2023 | (time == 2021 & geo %in% c("Iceland", "North Macedonia")))

# Get the data structure definition (DSD)
dsd <- get_eurostat_dsd(id7) |> 
  as.data.table() |>
  filter(concept == "geo") |>
  select(code, name)

# Merge data with the DSD
datafig7 <- merge(data7, dsd, by.x = "geo", by.y = "name", all.x = TRUE)

# Filter out codes
datafig7 <- datafig7[!code %in% c("EA19", "EA18", "EA", "EU28", "EU27_2007", "EU")]

# Clean geo column
datafig7$geo <- gsub(" \\(.*\\)", "", datafig7$geo)
datafig7$geo <- gsub("^Eu.*", "EU", datafig7$geo)

# Simplify ind_type column
datafig7$ind_type <- gsub(".*(Females|Males).*", "\\1", datafig7$ind_type)

# Order the names

name_ord_eu <- datafig7 |>
  filter(code %in% eu_cc, 
         unit == "Percentage of individuals", 
         ind_type == "Females") |>
  arrange(values) |>
  pull(geo)

name_ord_efta <- datafig7 |>
  filter(code %in% efta_cc, 
         unit == "Percentage of individuals", 
         ind_type == "Females") |>
  arrange(values) |>
  pull(geo)

name_ord_othr <- datafig7 |>
  filter(!code %in% c(efta_cc, eu_cc, "EU27_2020"), 
         unit == "Percentage of individuals", 
         ind_type == "Females") |>
  arrange(values) |>
  pull(geo)

name_ord <- c(name_ord_othr, " ", name_ord_efta, "  ", name_ord_eu, "   ", "EU")

# Prepare the final dataset
datafig7 <- datafig7 |>
  select(geo, ind_type, values) |>
  mutate(
    ind_type = recode(ind_type, 
                      "Females" = "Young females", 
                      "Males" = "Young males")
  ) |>
  add_row(geo = c(" ", "  ", "   "), 
          ind_type = "Young females", 
          values = NA)

# Factorize the geo and ind_type columns
datafig7$geo <- factor(datafig7$geo, levels = rev(name_ord))

datafig7$ind_type <- factor(datafig7$ind_type, 
                            levels = c("Young males", "Young females"))

# Recode specific geo values
datafig7 <- datafig7 |>
  mutate(
    geo = recode(geo,
                 "Iceland" = "Iceland (\U00B9)",
                 "North Macedonia" = "North Macedonia (\U00B9)"
                 # "Albania" = "Albania (\U00B9)"
    )
  )

```

### Plot

```{r}
# Define color palette
colors <- c("#B09120", "#2644A7")

# Define title, subtitle, and caption
title <- paste0("Young people with at least basic digital skills by gender, ",
                tail(date7, n = 1))
subtitle <- "(%)"

# "\n(\U00B9) Data from 2021",
caption <- paste0("\n(\U00B9) Data from 2021",
                  "\nSource: Eurostat (online data code: ", id7, ")")

# Create the plot
p7 <- ggplot(data = datafig7, aes(x = geo, y = values, fill = ind_type)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.5) +
  scale_fill_manual(values = colors) +
  scale_y_continuous(
    expand = c(0, 0),
    limits = c(0, max(data7$values) + 5),
    breaks = seq(0, max(data7$values) + 5, 10)
  ) +
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 60, hjust = 1),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.border = element_blank(),
    axis.line.y = element_blank(),
    axis.line.x = element_line(colour = "black", linetype = "solid"),
    plot.caption = element_text(hjust = 0),
    plot.title = element_text(hjust = 0, face = "bold"),
    legend.position = "bottom",
    legend.title = element_blank()
  ) +
  labs(
    title = title,
    subtitle = subtitle,
    caption = caption
  )

# Save the plot
output_file <- "digital_figures/p7.png"
ggsave(filename = output_file, plot = p7, width = 12, height = 8, dpi = 1000)

# Include the plot in the document
knitr::include_graphics(output_file)

```

## Figure 8

### Retrieving data

```{r}
#| eval: true


id8 <- "isoc_sk_cskl_i21"
date8 <- 2021:2023

eu_cc <- get("cc", envir = .restatapi_env)$EU27_2020
efta_cc <- c("CH", "NO", "IS", "LI")

# Fetch the data from Eurostat
data8 <- get_eurostat_data(
  id8, 
  filters = list(
    ind_type = c("M_Y16_29", "F_Y16_29"),
    indic_is = "I_CPRG2",
    freq = "Annual",
    unit = "PC_IND"
  ),
  date_filter = date8,
  label = TRUE,
  ignore.case = TRUE,
  exact_match = FALSE,
  perl = TRUE,
  stringsAsFactors = FALSE,
  force_local_filter = TRUE,
  keep_flags = TRUE
)

# Filter the data
data8 <- data8 |> 
  filter(unit == "Percentage of individuals") |>
  filter(time == 2023 | (time == 2021 & geo %in% c("Iceland", "North Macedonia")))

# Get the data structure definition (DSD)
dsd <- get_eurostat_dsd(id8) |> 
  as.data.table() |>
  filter(concept == "geo") |>
  select(code, name)

# Merge data with the DSD
datafig8 <- merge(data8, dsd, by.x = "geo", by.y = "name", all.x = TRUE)

# Filter out codes
datafig8 <- datafig8[!code %in% c("EA19", "EA18", "EA", "EU28", "EU27_2007", "EU")]

# Clean geo column
datafig8$geo <- gsub(" \\(.*\\)", "", datafig8$geo)
datafig8$geo <- gsub("^Eu.*", "EU", datafig8$geo)

# Simplify ind_type column
datafig8$ind_type <- gsub(".*(Females|Males).*", "\\1", datafig8$ind_type)

# Order the names
name_ord_eu <- datafig8 |>
  filter(code %in% eu_cc, 
         unit == "Percentage of individuals", 
         ind_type == "Females") |>
  arrange(values) |>
  pull(geo)

name_ord_efta <- datafig8 |>
  filter(code %in% efta_cc, 
         unit == "Percentage of individuals", 
         ind_type == "Females") |>
  arrange(values) |>
  pull(geo)

name_ord_othr <- datafig8 |>
  filter(!code %in% c(efta_cc, eu_cc, "EU27_2020"), 
         unit == "Percentage of individuals", 
         ind_type == "Females") |>
  arrange(values) |>
  pull(geo)

name_ord <- c(name_ord_othr, " ", name_ord_efta, "  ", name_ord_eu, "   ", "EU")

# Prepare the final dataset
datafig8 <- datafig8 |>
  select(geo, ind_type, values) |>
  mutate(
    ind_type = recode(ind_type, 
                      "Females" = "Young females", 
                      "Males" = "Young males")
  ) |>
  add_row(geo = c(" ", "  ", "   "), 
          ind_type = "Young females", 
          values = NA)

# Factorize the geo and ind_type columns
datafig8$geo <- factor(datafig8$geo, levels = rev(name_ord))

datafig8$ind_type <- factor(datafig8$ind_type, 
                            levels = c("Young males", "Young females"))

# Recode specific geo values
datafig8 <- datafig8 |>
  mutate(
    geo = recode(geo,
                 "Iceland" = "Iceland (\U00B9)",
                 "North Macedonia" = "North Macedonia (\U00B9)"
    )
  )

```

### Plot

```{r}
#| eval: true



# Define color palette
colors <- c("#B09120", "#2644A7")

# Define title, subtitle, and caption
title <- paste0("Individuals who wrote code in a programming language, ", tail(date8, n = 1))
subtitle <- "(%)"
caption <- paste0("\n(\U00B9) Data from 2021",
                  "\nSource: Eurostat (online data code: ", id8, ")")

# Create the plot
p8 <- ggplot(data = datafig8, aes(x = geo, y = values, fill = ind_type)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.5) +
  scale_fill_manual(values = colors) +
  scale_y_continuous(
    expand = c(0, 0),
    limits = c(0, max(data8$values) + 5),
    breaks = seq(0, max(data8$values) + 5, 5)
  ) +
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 60, hjust = 1),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.border = element_blank(),
    axis.line.y = element_blank(),
    axis.line.x = element_line(colour = "black", linetype = "solid"),
    plot.caption = element_text(hjust = 0),
    plot.title = element_text(hjust = 0, face = "bold"),
    legend.position = "bottom",
    legend.title = element_blank()
  ) +
  labs(
    title = title,
    subtitle = subtitle,
    caption = caption
  )

# Save the plot
output_file <- "digital_figures/p8.png"
ggsave(filename = output_file, plot = p8, width = 12, height = 8, dpi = 1000)

# Include the plot in the document
knitr::include_graphics(output_file)

```
